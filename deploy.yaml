
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-infos-configmap
  namespace: dev
data:
  DB_HOST: "40.89.175.188"
  DB_PORT: "27017"
  DB_USER: "sofuser"
  DB_PASS: "sofpass"
  DB_NAME: "soflearn"
  NODE_ENV: "prod" 

---
# if u want to pull image from remote hub change image policy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-dev-deployment
  namespace: dev
  labels:
     app: course-dev-app
spec:
  replicas: 1
  selector:
    matchLabels:
       app: course-dev-app
  template:
    metadata:
      labels:
         app: course-dev-app
    spec:
      containers:
      - name: course-dev
        image: registry.gitlab.com/sof-learning/course:latest
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        imagePullPolicy: Always
        ports:
        - containerPort: 3100

        #Defining Env Vars
        env:
        # Database Infos: From ConfigMap
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: db-infos-configmap
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: db-infos-configmap
              key: DB_NAME
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: db-infos-configmap
              key: DB_PORT
        # Database Creds: From Secret
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: db-infos-configmap
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            configMapKeyRef:
              name: db-infos-configmap
              key: DB_PASS
        

      imagePullSecrets:
        - name: regcred

---
# if u working on minikube => minikube addons enable ingress 
apiVersion: v1
kind: Service
metadata:
  name: course-dev-svc
  namespace: dev
  labels:
    app: course-dev-app
spec:
  ports:
  - port: 3100
  selector:
    app: course-dev-app
  clusterIP: None
                    
---    
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: course-dev-ingress
  namespace: dev
spec:
  tls:
    - hosts:
        - course-dev.canbe.fun
      secretName: course-dev-tls
  rules:
    - host: course-dev.canbe.fun
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: course-dev-svc
                port:
                  number: 3100